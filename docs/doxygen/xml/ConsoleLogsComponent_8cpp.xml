<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="ConsoleLogsComponent_8cpp" kind="file" language="C++">
    <compoundname>ConsoleLogsComponent.cpp</compoundname>
    <includes refid="ConsoleLogsComponent_8hpp" local="yes">ConsoleLogsComponent.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>src/components/ConsoleLogsComponent.cpp</label>
        <link refid="ConsoleLogsComponent_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ConsoleLogsComponent.hpp</label>
        <link refid="ConsoleLogsComponent_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>chrono</label>
      </node>
      <node id="4">
        <label>ctime</label>
      </node>
      <node id="5">
        <label>iomanip</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="9">
        <label>ylt/struct_pack.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ConsoleLogsComponent.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>new<sp/>log<sp/>entry<sp/>with<sp/>the<sp/>current<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConsoleLogsComponent::add_log(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>log)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>timestamp<sp/>=<sp/>current_time_string();</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>log_buffer[timestamp]<sp/>=<sp/>log;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>the<sp/>buffer<sp/>does<sp/>not<sp/>exceed<sp/>max_size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(log_buffer.size()<sp/>&gt;<sp/>max_size)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_buffer.erase(log_buffer.begin());</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>current<sp/>buffer<sp/>of<sp/>logs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">std::map&lt;std::string,<sp/>std::string&gt;<sp/>ConsoleLogsComponent::get_logs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>log_buffer;<sp/>}</highlight></codeline>
    </programlisting>
    <location file="src/components/ConsoleLogsComponent.cpp"/>
  </compounddef>
</doxygen>
