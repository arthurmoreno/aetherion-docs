<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classDefaultNodeGene" kind="class" language="C++" prot="public">
    <compoundname>DefaultNodeGene</compoundname>
    <basecompoundref refid="classBaseGene" prot="public" virt="non-virtual">BaseGene</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classDefaultNodeGene_1a6b38a2f4fd4844c528634af526b61649" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int DefaultNodeGene::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <qualifiedname>DefaultNodeGene::key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="37" column="9" bodyfile="src/neat/genes.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDefaultNodeGene_1ab5d0f8396661b22e26d29ce55ed283e4" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float DefaultNodeGene::bias</definition>
        <argsstring></argsstring>
        <name>bias</name>
        <qualifiedname>DefaultNodeGene::bias</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="38" column="11" bodyfile="src/neat/genes.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDefaultNodeGene_1a7e3212affa7a7906c37196c1d67d9c74" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float DefaultNodeGene::response</definition>
        <argsstring></argsstring>
        <name>response</name>
        <qualifiedname>DefaultNodeGene::response</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="39" column="11" bodyfile="src/neat/genes.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDefaultNodeGene_1ac23be95ef8566899a359e1ffbc2b0e26" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DefaultNodeGene::activation</definition>
        <argsstring></argsstring>
        <name>activation</name>
        <qualifiedname>DefaultNodeGene::activation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="40" column="17" bodyfile="src/neat/genes.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDefaultNodeGene_1a058bd3b362c5b43211c2b683cd45abda" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DefaultNodeGene::aggregation</definition>
        <argsstring></argsstring>
        <name>aggregation</name>
        <qualifiedname>DefaultNodeGene::aggregation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="41" column="17" bodyfile="src/neat/genes.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classDefaultNodeGene_1a3108b9b269a9e70c9386cc0155cfc296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DefaultNodeGene::DefaultNodeGene</definition>
        <argsstring>(int key)</argsstring>
        <name>DefaultNodeGene</name>
        <qualifiedname>DefaultNodeGene::DefaultNodeGene</qualifiedname>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="44" column="5" bodyfile="src/neat/genes.cpp" bodystart="6" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classDefaultNodeGene_1ae5b4a022df98657b493c4546de383589" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string DefaultNodeGene::to_string</definition>
        <argsstring>() const override</argsstring>
        <name>to_string</name>
        <qualifiedname>DefaultNodeGene::to_string</qualifiedname>
        <reimplements refid="classBaseGene_1a37871b1b6a63cb941fa4d8cc9a4dc45c">to_string</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="47" column="25" bodyfile="src/neat/genes.cpp" bodystart="9" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classDefaultNodeGene_1a6f3e5eb8ca9a6e1d48a229e6c8b4ff1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classDefaultNodeGene" kindref="compound">DefaultNodeGene</ref> *</type>
        <definition>DefaultNodeGene * DefaultNodeGene::copy</definition>
        <argsstring>() const override</argsstring>
        <name>copy</name>
        <qualifiedname>DefaultNodeGene::copy</qualifiedname>
        <reimplements refid="classBaseGene_1aca5621fe8e4781aa1b6e436a2f16ace7">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="50" column="29" bodyfile="src/neat/genes.cpp" bodystart="16" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classDefaultNodeGene_1a15003c2cbeddd25d6315ccf7f6be5759" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DefaultNodeGene::distance</definition>
        <argsstring>(const DefaultNodeGene &amp;other, const GenomeConfig &amp;config) const</argsstring>
        <name>distance</name>
        <qualifiedname>DefaultNodeGene::distance</qualifiedname>
        <param>
          <type>const <ref refid="classDefaultNodeGene" kindref="compound">DefaultNodeGene</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="structGenomeConfig" kindref="compound">GenomeConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="53" column="12" bodyfile="src/neat/genes.cpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classDefaultNodeGene_1a2fa90af4dac4cd2caefca602d78e1d07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classDefaultNodeGene" kindref="compound">DefaultNodeGene</ref> *</type>
        <definition>DefaultNodeGene * DefaultNodeGene::crossover</definition>
        <argsstring>(const DefaultNodeGene &amp;other) const</argsstring>
        <name>crossover</name>
        <qualifiedname>DefaultNodeGene::crossover</qualifiedname>
        <param>
          <type>const <ref refid="classDefaultNodeGene" kindref="compound">DefaultNodeGene</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="56" column="21" bodyfile="src/neat/genes.cpp" bodystart="32" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classDefaultNodeGene_1a779bd20e7a38eaa5555db27769c4e7b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBaseGene" kindref="compound">BaseGene</ref> *</type>
        <definition>BaseGene * DefaultNodeGene::crossover</definition>
        <argsstring>(const BaseGene &amp;other) const override</argsstring>
        <name>crossover</name>
        <qualifiedname>DefaultNodeGene::crossover</qualifiedname>
        <reimplements refid="classBaseGene_1a84782b89734a1a4d3ad4cf273c36e14e">crossover</reimplements>
        <param>
          <type>const <ref refid="classBaseGene" kindref="compound">BaseGene</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="59" column="22" bodyfile="src/neat/genes.cpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classDefaultNodeGene_1a468a9ca9ed501bfeb5dc63b3b174abb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void DefaultNodeGene::init_attributes</definition>
        <argsstring>() override</argsstring>
        <name>init_attributes</name>
        <qualifiedname>DefaultNodeGene::init_attributes</qualifiedname>
        <reimplements refid="classBaseGene_1a8edc6492fed86f21383dc2d39e116715">init_attributes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="62" column="18" bodyfile="src/neat/genes.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classDefaultNodeGene_1abc1cfb9c7bffcdf303bf74cbb369d3d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void DefaultNodeGene::mutate</definition>
        <argsstring>() override</argsstring>
        <name>mutate</name>
        <qualifiedname>DefaultNodeGene::mutate</qualifiedname>
        <reimplements refid="classBaseGene_1ac6dc2ae6138fe1e7155f910c4c4e4077">mutate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/neat/genes.hpp" line="64" column="10" bodyfile="src/neat/genes.cpp" bodystart="59" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BaseGene</label>
        <link refid="classBaseGene"/>
      </node>
      <node id="1">
        <label>DefaultNodeGene</label>
        <link refid="classDefaultNodeGene"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BaseGene</label>
        <link refid="classBaseGene"/>
      </node>
      <node id="1">
        <label>DefaultNodeGene</label>
        <link refid="classDefaultNodeGene"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/neat/genes.hpp" line="35" column="1" bodyfile="src/neat/genes.hpp" bodystart="35" bodyend="65"/>
    <listofallmembers>
      <member refid="classDefaultNodeGene_1ac23be95ef8566899a359e1ffbc2b0e26" prot="public" virt="non-virtual"><scope>DefaultNodeGene</scope><name>activation</name></member>
      <member refid="classDefaultNodeGene_1a058bd3b362c5b43211c2b683cd45abda" prot="public" virt="non-virtual"><scope>DefaultNodeGene</scope><name>aggregation</name></member>
      <member refid="classBaseGene_1a37ca839c6c11ee7539c2b9d0f20a4733" prot="public" virt="non-virtual"><scope>DefaultNodeGene</scope><name>BaseGene</name></member>
      <member refid="classDefaultNodeGene_1ab5d0f8396661b22e26d29ce55ed283e4" prot="public" virt="non-virtual"><scope>DefaultNodeGene</scope><name>bias</name></member>
      <member refid="classDefaultNodeGene_1a6f3e5eb8ca9a6e1d48a229e6c8b4ff1b" prot="public" virt="virtual"><scope>DefaultNodeGene</scope><name>copy</name></member>
      <member refid="classDefaultNodeGene_1a2fa90af4dac4cd2caefca602d78e1d07" prot="public" virt="non-virtual"><scope>DefaultNodeGene</scope><name>crossover</name></member>
      <member refid="classDefaultNodeGene_1a779bd20e7a38eaa5555db27769c4e7b8" prot="public" virt="virtual"><scope>DefaultNodeGene</scope><name>crossover</name></member>
      <member refid="classDefaultNodeGene_1a3108b9b269a9e70c9386cc0155cfc296" prot="public" virt="non-virtual"><scope>DefaultNodeGene</scope><name>DefaultNodeGene</name></member>
      <member refid="classDefaultNodeGene_1a15003c2cbeddd25d6315ccf7f6be5759" prot="public" virt="non-virtual"><scope>DefaultNodeGene</scope><name>distance</name></member>
      <member refid="classDefaultNodeGene_1a468a9ca9ed501bfeb5dc63b3b174abb9" prot="public" virt="virtual"><scope>DefaultNodeGene</scope><name>init_attributes</name></member>
      <member refid="classDefaultNodeGene_1a6b38a2f4fd4844c528634af526b61649" prot="public" virt="non-virtual"><scope>DefaultNodeGene</scope><name>key</name></member>
      <member refid="classDefaultNodeGene_1abc1cfb9c7bffcdf303bf74cbb369d3d8" prot="public" virt="virtual"><scope>DefaultNodeGene</scope><name>mutate</name></member>
      <member refid="classDefaultNodeGene_1a7e3212affa7a7906c37196c1d67d9c74" prot="public" virt="non-virtual"><scope>DefaultNodeGene</scope><name>response</name></member>
      <member refid="classDefaultNodeGene_1ae5b4a022df98657b493c4546de383589" prot="public" virt="virtual"><scope>DefaultNodeGene</scope><name>to_string</name></member>
      <member refid="classBaseGene_1a5fb5d3bffb4b004ca077e18412d7c656" prot="public" virt="virtual"><scope>DefaultNodeGene</scope><name>~BaseGene</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
