<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="ItemConfigurationManager_8cpp" kind="file" language="C++">
    <compoundname>ItemConfigurationManager.cpp</compoundname>
    <includes refid="ItemConfigurationManager_8hpp" local="yes">ItemConfigurationManager.hpp</includes>
    <incdepgraph>
      <node id="7">
        <label>ItemConfiguration.hpp</label>
        <link refid="ItemConfiguration_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/ItemConfigurationManager.cpp</label>
        <link refid="ItemConfigurationManager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ItemConfigurationManager.hpp</label>
        <link refid="ItemConfigurationManager_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>components/ItemsComponents.hpp</label>
        <link refid="ItemsComponents_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="8">
        <label>entt/entt.hpp</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="15">
        <label>map</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="4">
        <label>mutex</label>
      </node>
      <node id="9">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="16">
        <label>tuple</label>
      </node>
      <node id="6">
        <label>unordered_map</label>
      </node>
      <node id="10">
        <label>variant</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="ItemConfigurationManager_8cpp_1a6b6c2c3409fcb7a28cd19e807954d800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uintptr_t</type>
        <definition>uintptr_t registerItemConfigurationOnManager</definition>
        <argsstring>(const std::shared_ptr&lt; ItemConfiguration &gt; &amp;config)</argsstring>
        <name>registerItemConfigurationOnManager</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classItemConfiguration" kindref="compound">ItemConfiguration</ref> &gt; &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ItemConfigurationManager.cpp" line="3" column="11" bodyfile="src/ItemConfigurationManager.cpp" bodystart="3" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="ItemConfigurationManager_8cpp_1a7e69c6939a331c447e630b0f6098c0cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classItemConfiguration" kindref="compound">ItemConfiguration</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ItemConfiguration &gt; getItemConfigurationOnManager</definition>
        <argsstring>(const std::string &amp;itemId)</argsstring>
        <name>getItemConfigurationOnManager</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>itemId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ItemConfigurationManager.cpp" line="16" column="17" bodyfile="src/ItemConfigurationManager.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="ItemConfigurationManager_8cpp_1a7fee40d93e6c3eb7db46d6b21c3a0164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void deregisterItemConfigurationOnManager</definition>
        <argsstring>(const std::string &amp;itemId)</argsstring>
        <name>deregisterItemConfigurationOnManager</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>itemId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ItemConfigurationManager.cpp" line="21" column="6" bodyfile="src/ItemConfigurationManager.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ItemConfigurationManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">uintptr_t<sp/>registerItemConfigurationOnManager(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ItemConfiguration&gt;&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/>ItemConfigurationManager::getInstance();</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(manager.configurations.find(config-&gt;getItemId())<sp/>!=<sp/>manager.configurations.end())<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;ItemConfiguration<sp/>with<sp/>ID<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>config-&gt;getItemId()<sp/>+</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>already<sp/>exists.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.registerItemConfiguration(config);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uintptr_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(config.get());</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>item<sp/>configuration<sp/>by<sp/>itemId</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">std::shared_ptr&lt;ItemConfiguration&gt;<sp/>getItemConfigurationOnManager(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>itemId)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ItemConfigurationManager::getInstance().getItemConfiguration(itemId);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deregister<sp/>an<sp/>item<sp/>configuration<sp/>by<sp/>itemId</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deregisterItemConfigurationOnManager(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>itemId)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemConfigurationManager::getInstance().deregisterItemConfiguration(itemId);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="classItemConfigurationManager" kindref="compound">ItemConfigurationManager</ref>&amp;<sp/>ItemConfigurationManager::getInstance()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classItemConfigurationManager" kindref="compound">ItemConfigurationManager</ref><sp/>instance;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ItemConfigurationManager::registerItemConfiguration(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ItemConfiguration&gt;&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(managerMutex);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>configurations[config-&gt;getItemId()]<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">std::shared_ptr&lt;ItemConfiguration&gt;<sp/>ItemConfigurationManager::getItemConfiguration(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>itemId)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(managerMutex);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>configurations.find(itemId);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>configurations.end())<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ItemConfigurationManager::deregisterItemConfiguration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>itemId)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(managerMutex);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>configurations.erase(itemId);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">ItemConfigurationManager::~ItemConfigurationManager()<sp/>{<sp/>configurations.clear();<sp/>}</highlight></codeline>
    </programlisting>
    <location file="src/ItemConfigurationManager.cpp"/>
  </compounddef>
</doxygen>
